upstream backend {
    server api-golang:80 max_fails=3 fail_timeout=100s;
    server api-node:80 max_fails=3 fail_timeout=30s;
}

server {
  listen 8080;
  
  # Docker internal dns server
  resolver 127.0.0.11;
  
  location /ping {
        access_log off;
        add_header 'Content-Type' 'text/plain';
        return 200 "pong";
  }
  location /api/golang/ {
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_http_version 1.1;

        set $api_golang_upstream http://backend/;
        proxy_pass $api_golang_upstream;
        
        health_check uri=/ping mandatory persistent interval=10 fails=3 passes=2;
  }
  location /api/node/ {
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_http_version 1.1;

        set $api_node_upstream http://backend/;
        proxy_pass $api_node_upstream;

        health_check uri=/ping mandatory persistent interval=10 fails=3 passes=2;
  }
  location / {
    root /usr/share/nginx/html;
    index index.html index.htm;
    try_files $uri $uri/ /index.html =404;
  }
  
  include /etc/nginx/extra-conf.d/*.conf;
}